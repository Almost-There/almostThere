W3lcum 2 the \and.0f.misf!t.c0d3

function displaySource() {
	echo "
	<br /><br /><br /><br />
	<script>
		$(document).ready(function(){
		$(\".shSource\").click(function(){
		$(\".sourceCode\").toggle();
		}); });
	</script>";
	echo "<div  class='sourceCode' >";
		show_source(__FILE__);
	echo "</div>";
};

	echo "<div class='settingsMenuBlock'>\n<span>Hello " . $_SERVER['REMOTE_ADDR'] . "!</span></div>";

	<div class='settingsMenuBlock'>				
					<span class='fl cf'>Show NSFW things?</span>
							<label class='switch fr'>
							  <input type='checkbox' class='switch-input'>
							  <span class='switch-label' data-on='Yes' data-off='No'></span>
							  <span class='switch-handle'></span>
							</label><br />
				</div>
				<div class='settingsMenuBlock'>				
					<span class='fl cf'>Sounds</span>
							<label class='switch fr'>
							  <input type='checkbox' class='switch-input' checked>
							  <span class='switch-label' data-on='On' data-off='Off'></span>
							  <span class='switch-handle'></span>
							</label><br />
				</div>
				<div class='settingsMenuBlock'>
					<span class='fl cf'>Mobile Version</span>
					<label class='switch fr'>
					  <input type='checkbox' class='switch-input'>
					  <span class='switch-label' data-on='On' data-off='Off'></span>
					  <span class='switch-handle'></span>
					</label><br />
				</div>
				<div class='settingsMenuBlock'>				
					<span class='fl cf'>Developer Options</span>
							<label class='switch fr'>
							  <input type='checkbox' class='switch-input'>
							  <span class='switch-label' data-on='On' data-off='Off'></span>
							  <span class='switch-handle'></span>
							</label><br />
				</div>


				/*
// default onOff, Fancy Name, technical name.
$configMatrix = array();
$configMatrix[0][0] = "settingName";
$configMatrix[1]['Fancy animations'] = "fancyAnimations";
$configMatrix[1]['Show NSFW Things?'] = "nsfw";
$configMatrix[1]['Sounds'] = "Sounds";


foreach ($configMatrix as $v1) {
    foreach ($v1 as $v2) {
        echo "$v2\n";
    }
}
*/


    function myFunction()
    {
    var x = "Total Width: " + screen.width + "px";
    document.getElementById("dimensions").innerHTML=x;
    }

    -//Genisis
-$(function() {
-
-
-var button = $('.changeColor');
-var color;
-
-button.click(function(){
-	color = $(this).css("background-color");
-    
-    $(".theBGcolor").animate({backgroundColor: color},500);
-	$(".theColor").animate({color: color},500);
-    
-    $.cookie('setColor', color, { expires: 365, path: '/' });
-});
-
-if(typeof($.cookie('setColor')) != "undefined"){
-    color = $.cookie('setColor');
-    $(".theColor theBGcolor").css("background-color", color);
-}
-
-
-
-
-//How animations should work...
-
-// Two functions will exist, animations to play every time a page is loaded
-// And a function to play animations only once when the page is first loaded
- 
- 
- //http://jsfiddle.net/gmDRM/351/
- 
-	
-$.gl = {};
-$.gl.intervalID = -1;
-$.gl.countDown = 6.00;
-$.gl.beat = 0.00;
-$.gl.step = 1.00;
-$.gl.div = null;
-$.gl.orig = null; // char array
-                
-function randomLetter(){
-  return String.fromCharCode(Math.floor(((Math.random() * 1000) % 73) + 49));
-}
-function unscramble(__id){
-    if ($.gl.intervalID == -1){
-        $.gl.countDown = 6.00;
-        $.gl.beat = 0.00;
-        $.gl.step = 0.00;
-        $.gl.div = $(__id);
-        $.gl.intervalID = window.setInterval(unscramblechar,1);
-    }else{
-        window.clearInterval($.gl.intervalID);
-        $.gl.intervalID = -1;
-    }
-}
-function unscramblechar(){
-    var spans = $('span', $($.gl.div));
-    $.gl.countDown -= 0.1;
-    $.gl.step += 0.1;
-    $.gl.beat += 0.1;
-    var charIndex = Math.floor(((Math.random() * 1000) * 1000) % $.gl.orig.length);
-
-    if ($.gl.countDown <= 0){ 
-        window.clearInterval($.gl.intervalID); 
-        $.gl.intervalID = -1;
-        // fill in correct letters
-        for(var i = 0; i < spans.length; i++) {
-            $(spans[i]).text($.gl.orig[i]);
-        }
-    }
-    
-    if ($.gl.beat >= 0.01) { 
-        // fill with random chars
-        var ch = $(spans[charIndex]).text();
-        if (ch != '' && ch != $.gl.orig[charIndex]) {
-            $(spans[charIndex]).text(randomLetter()); 
-        }                    
-        $.gl.beat = 0.00;
-    }
-
-    if ($.gl.step >= 0.08) {
-        // fill with correct char
-        var ch = $(spans[charIndex]).text();
-        if (ch != '' && ch != $.gl.orig[charIndex]) {
-            $(spans[charIndex]).text($.gl.orig[charIndex]); 
-        }                                
-        $.gl.step = 0.00;
-    }
-}                
-                
-$(document).ready(function () {
-    $.gl.orig = $('#msg').text().split('');                    
-    $('#msg').empty();
-    for(var i = 0; i < $.gl.orig.length; i++) {
-        if ($.gl.orig[i] != ' ') {
-            $('#msg').append('<span>' + randomLetter() + '</span>');        
-        } else {
-            $('#msg').append('<span> </span>');        
-        }
-    } 
-    unscramble('#msg');
-});
-	
-	
-	
-	
-	
- /*
-var MyDiv1 = document.getElementById('second-text');
-var MyDiv2 = document.getElementById('first-text');
-
-	window.ingredients = [ MyDiv2.innerHTML, MyDiv1.innerHTML];
-//    var debug = $("#debug");    
-    function flipText(newText) {
-        flipUp == true ? ($("#second-text").text(newText), $("#first-text").hide("drop", {
-            direction: "down"
-        }, 300), $("#second-text").show("drop", {
-            direction: "up"
-        }, 300)) : ($("#first-text").text(newText), $("#first-text").show("drop", {
-            direction: "up"
-        }, 300), $("#second-text").hide("drop", {
-            direction: "down"
-        }, 300));
-        flipUp = !flipUp; // Alternating flipping direction
-    }
-
-	
-    var interval = 2e3; // 2 seconds
-    var flipUp = true;
-    var index = 0;
-    var maxIndex = window.ingredients.length - 1;
-    setInterval(function() {
-        var nextText = window.ingredients[index];
-//        debug.append("<p>"+window.ingredients[index]+"</p>");
-        flipText(nextText);
-        index = (index == maxIndex) ? 0 : index + 1;
-     }, interval);
-	*/
-	$("#settingsButton").click(function() {
-		$("#settingsMenu").toggleClass( "hover" );
-		$("#settingsMenu").slideToggle( 250 );
-		$("#settingsSpan").html("Close Settings");
-	});
-	
-	$(".todoButton").click(function() {
-		$(".todoWindow").toggleClass( "hover" );
-		$(".todoWindow").slideToggle( 250 );
-	});
-	
-	setTimeout(waitForDoc, 200);
-	function waitForDoc() {
-		var i = -1;
-		var arr = $(".animateNav");
-		(function(){
-		if(arr[++i])
-			$(arr[i]).fadeIn ( 100 ).animate( 150, "linear", arguments.callee);
-		})();
-	}
-	
-	setTimeout(waitForDoc, 200);
-	function waitForDoc() {
-		var i = -1;
-		var arr = $(".animateSquare");
-		(function(){
-		if(arr[++i])
-			$(arr[i]).delay ( 100 ).animate({ height: "175px" }, 50, "linear", arguments.callee);
-		})();
-	}
-
-	// when the DOM is ready...
-var tickerIterations = 0;
-var currentTickerIteration = 0;
-$(document).ready(function () {
-  // load the ticker
-	createTicker();
-
-}); 
-
-function createTicker(){
-	if (typeof $('#ticker-area').attr('alt') != 'undefined'){
-		tickerIterations = $('#ticker-area').attr('alt');
-	}
-	// put all list elements within #ticker-area into array
-	var tickerLIs = $("#ticker-area ul").children();
-	tickerItems = new Array();
-	tickerLIs.each(function(el) {
-		tickerItems.push( jQuery(this).html() );
-	});
-	i = 0
-	rotateTicker();
-}
-
-function rotateTicker(){
-	if( i == tickerItems.length ){
-	  i = 0;
-		if( tickerIterations > 0 ){
-			console.log( "tickerIterations: " +tickerIterations );
-			currentTickerIteration++;
-			console.log( "currentTickerIteration: " + currentTickerIteration );
-			if( currentTickerIteration >= tickerIterations ){
-				console.log( "Done iterating" );
-				return false;
-			}
-		}
-	}
-  tickerText = tickerItems[i];
-	c = 0;
-	typetext();
-	setTimeout( "rotateTicker()", 5000 );
-	i++;
-}
-
-var isInTag = false;
-function typetext() {	
-	var thisChar = tickerText.substr(c, 1);
-	if( thisChar == '<' ){ isInTag = true; }
-	if( thisChar == '>' ){ isInTag = false; }
-	$('#ticker-area').html("&nbsp;" + tickerText.substr(0, c++));
-	if(c < tickerText.length+1)
-		if( isInTag ){
-			typetext();
-		}else{
-			setTimeout("typetext()", 28);
-		}
-	else {
-		c = 1;
-		tickerText = "";
-	}	
-}
-	
-	
-	
-	
-	
-	
-	})


/* Link Fading Styles NOT WORKING */
	.fade {-o-transition: all 0.5s linear; -moz-transition: all 0.5s linear; -khtml-transition: all 0.5s linear; -webkit-transition: all 0.5s linear; -ms-transition: all 0.5; linear;transition: all 0.5s linear;}


<div class='youTube' >
	<iframe src="//www.youtube.com/embed/<? 
	$yts = array(
	"OKxaPkIx4WY", 		/* Oxygen - Moguai feat. Fiora */
	"d1wGFgoocKk",		/* Schoolboy - Project No-Autotune */
	"n9nntf5_JXc", 		/* MSD - I Feel You (Bluescreens Remix) */
	"lG5aSZBAuPs",		/* XXYYXX - About You */
	"lM7XgAmcXp8",		/* InnerPartySystem - American Trash */
	"2qN5ewi44N8",		/* Motionless in White - AMERICA */
	"uxelXPg961M", 		/* Mastodon - Divinations */
	"7kCyPj6ZFTA",		/* AWOLNATION - Sail (Borgore Remix) */
	"reHGIYHAR2Q",		/* Borgore - Nympho */
	"fxvGHQHiY70",		/* Animal Collective - Peacebone */
	"FaJytyOISmE", 		/* Pasafire - Rubber Bands */
	"xsV8TrF4gN0",		/* Not In Love - Crystal Castles */
	"C-9v68o5Gfs",		/* Voicans - Loyal Friend */
	"k8gpHUIZaVQ",		/* Boreta - Honey Heart */
	"HEkLU2AiJCs",		/* Shiny Toy Guns - Stripped */
	"8wCgxkQj_Qo", 		/* Pretty Lights - I Know The Truth */
	"f9EM8T5K6d8",		/* Modstep - Another Day (Xcore Remix) */
	"PQ1PU1XOQIk",		/* Styles of Beyond - Bleach */
	"ShU3_-Y6SH0",		/* Celldweller - Goodbye 2012 Revision */
	"8mYd2X_9rrs",		/* Pendulum - Hold your Colour */
	"VuwwvokPaQ", 		/* The Airplane Boys - Beau Monde */
	"3LqsWSvnjGs", 		/* Deadmau5 - asdfghjkl */
	"Z0NefmRM81Y", 		/* Sunchase feat. Yana Kay - Remember Me */
	"Q1KAjQRdTUE");		/* Fatboy Slim - Right Here Right Now (Trumpdisco Remix) */
	$rYt = rand(0,count($yts)-1);
	$yt= $yts[$rYt];
	echo $yt;
	?>?autoplay=0&amp;theme=dark&amp;color=white" allowfullscreen></iframe>
</div>
<div>
<?
	squares( $squareTitle='Forum Activity'		);
	squares( $squareTitle='Steam Activity'		);
	squares( $squareTitle='Recent Changes'		);
	squares( $squareTitle='New People'			);
	squares( $squareTitle='Recent Logins'		); 
	squares( $squareTitle='Currently Online'	);
	squares( $squareTitle='Global Settings'		); 
?></div>
<div style='font-family:neoSans;font-size:10px;'>Look at how fucking pretty this website is with this antialiased fucking font, this means that even though this text is like 10 pixels high you can still read it crisp as fuck</div>



/* Tile Styles */
	.frontBody {display:block;overflow:hidden;height:0px;width:175px;margin:10px 0px 0px 10px;float:left;}
	.frontBody h3 {font-size:18px;padding:5px;}
	.frontBody ul {margin-left:20px;}
	.frontBody hr {opacity:0.3;width:95%;border-bottom:1px solid #D3D3D3;clear:both;}

<div><?
	squares( $squareTitle='Active AT Channels'		);
	squares( $squareTitle='IRC Users in-game'		);
	squares( $squareTitle='IRC Users Total'		);
	squares( $squareTitle='Logged in Today'			);
	squares( $squareTitle='Trending Profanities'	); 
?></div>

	<li><a href='steam://url/GroupSteamIDPage/103582791430342520'>Steam</a></li>
			<li><a href='#servers'>Servers</a></li>
			<li><a href='#users'>Users</a></li>
